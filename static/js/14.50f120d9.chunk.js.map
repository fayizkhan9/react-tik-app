{"version":3,"sources":["utils/api.js","actions/alert.js","content/settings/index.js"],"names":["api","axios","create","baseURL","headers","interceptors","response","use","res","err","status","console","log","Promise","reject","setAlert","msg","alertType","dispatch","id","uuidv4","type","SET_ALERT","payload","setTimeout","REMOVE_ALERT","HashTags","localStorage","admin","window","location","href","useState","email","values","setValues","setEmail","password","setPassword","currentAdmin","JSON","parse","getItem","_id","post","store","data","style","margin","width","padding","sx","mb","paddingTop","fontSize","marginLeft","variant","noValidate","autoComplete","onSubmit","e","preventDefault","autoFocus","fullWidth","label","marginBottom","value","onChange","target","htmlFor","showPassword","endAdornment","position","edge","onClick","onMouseDown","event","display","alignItems","flexWrap","justifyContent","size"],"mappings":"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","file":"static/js/14.50f120d9.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n  res => res,\r\n  err => {\r\n    if (err.response.status === 401) {\r\n      console.log(\"dispatch logout\")\r\n    }\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType) => dispatch => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 3000);\r\n};\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\nimport api from 'src/utils/api'\r\nimport store from '../../store'\r\nimport { setAlert } from '../../actions/alert'\r\n\r\n// ** Third Party Styles Imports\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\n// ** MUI Components\r\nimport Box from '@mui/material/Box'\r\nimport Button from '@mui/material/Button'\r\nimport TextField from '@mui/material/TextField'\r\nimport InputLabel from '@mui/material/InputLabel'\r\nimport Typography from '@mui/material/Typography'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport OutlinedInput from '@mui/material/OutlinedInput'\r\nimport InputAdornment from '@mui/material/InputAdornment'\r\nimport Card from '@mui/material/Card';\r\n// ** Icons Imports\r\nimport EyeOutline from 'mdi-material-ui/EyeOutline'\r\nimport EyeOffOutline from 'mdi-material-ui/EyeOffOutline'\r\n\r\n\r\nconst HashTags = () => {\r\n\r\n    if (!localStorage.admin) {\r\n        return window.location.href = '/login'\r\n    }\r\n    \r\n    const [values, setValues] = useState({\r\n        email: ''\r\n    })\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword })\r\n    }\r\n    const handleMouseDownPassword = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n\r\n    async function update() {\r\n        const currentAdmin = JSON.parse(localStorage.getItem('admin'))\r\n        try {\r\n            var id = '';\r\n            if (currentAdmin) {\r\n                id = currentAdmin._id;\r\n            }\r\n            const res = await api.post('/auth/adminUpdate', { id, email, password });\r\n            store.dispatch(setAlert('Upated Successfully !', 'info'));\r\n            setValues({\r\n                email: res.data.email,\r\n                password: res.data.password\r\n            })\r\n\r\n        } catch (err) {\r\n            if (err) {\r\n                store.dispatch(setAlert('Something went wrong !', 'error'));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div style={{ margin: 'auto', width: '50%', padding: '10px' }}>\r\n                <Card style={{ margin: '15px', padding: '15px' }}>\r\n                    <Box sx={{ mb: 6, paddingTop: '25px' }}>\r\n                        <p style={{ margin: '10px', fontSize: '20px', marginLeft: 0 }}> <b> Update Your Credentials </b></p>\r\n                        <Typography variant='body2' key='2'>Please Enter Your New Credentials !</Typography>\r\n                    </Box>\r\n\r\n                    <form noValidate autoComplete='off' onSubmit={e => e.preventDefault()}>\r\n                        <TextField autoFocus fullWidth id='email' label='Email' sx={{ marginBottom: 4 }}\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor='auth-login-password'>Password</InputLabel>\r\n                            <OutlinedInput\r\n                                label='Password'\r\n                                value={password}\r\n                                id='auth-login-password'\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                type={values.showPassword ? 'text' : 'password'}\r\n                                endAdornment={\r\n                                    <InputAdornment position='end'>\r\n                                        <IconButton\r\n                                            edge='end'\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            aria-label='toggle password visibility'\r\n                                        >\r\n                                            {values.showPassword ? <EyeOutline /> : <EyeOffOutline />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                        <Box\r\n                            sx={{ mb: 4, display: 'flex', alignItems: 'center', flexWrap: 'wrap', justifyContent: 'space-between' }}\r\n                        >\r\n\r\n                        </Box>\r\n                        <Button\r\n                            fullWidth\r\n                            size='large'\r\n                            variant='contained'\r\n                            sx={{ marginBottom: 3 }}\r\n                            onClick={update}\r\n                        >\r\n                            Update\r\n                        </Button>\r\n\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HashTags;\r\n"],"sourceRoot":""}